AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  data-pipeline

  SAM Template for data-pipeline sam app

Globals:
  Function:
    Timeout: 15 # maximum Lambda timeout

Resources:

  InputBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: csv-input-bucket-order-data

  DataCleanserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/data_cleanser/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Environment:
        Variables:
          INPUT_BUCKET_NAME: !Ref InputBucket
          STAGING_BUCKET_NAME: !Ref StagingBucket
      Role: !GetAtt DataCleanserFunctionIAMRole.Arn

  DataCleanserFunctionIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
               - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 's3:GetBucketNotification'
                  - 's3:PutBucketNotification'
                Resource: !Sub 'arn:aws:s3:::${InputBucket}'
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: 'arn:aws:logs:*:*:*'

  StagingBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: csv-staging-bucket-order-data-cleansed

  DataConverterFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/data_converter/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Environment:
        Variables:
          STAGING_BUCKET_NAME: !Ref StagingBucket
          OUTPUT_BUCKET_NAME: !Ref OutputBucket

  OutputBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: json-output-bucket-order-data

  CustomResourceLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/custom_resource_s3_notification
      Handler: app.lambda_handler
      Runtime: python3.9
      Role: !GetAtt DataCleanserFunctionIAMRole.Arn
  
  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt DataCleanserFunction.Arn
      Action: 'lambda:InvokeFunction'
      Principal: s3.amazonaws.com
      SourceAccount: !Ref AWS::AccountId
      SourceArn: !Sub 'arn:aws:s3:::${InputBucket}'
  
  LambdaTrigger:
    Type: 'Custom::LambdaTrigger'
    Properties:
      ServiceToken: !GetAtt CustomResourceLambdaFunction.Arn
      LambdaArn: !GetAtt DataCleanserFunction.Arn
      Bucket: !Ref InputBucket

  

Outputs:
  DataCleanserFunction:
    Description: "Data Cleanser Lambda Function ARN"
    Value: !GetAtt DataCleanserFunction.Arn
  DataConverterFunction:
    Description: "Data Converter Lambda Function ARN"
    Value: !GetAtt DataConverterFunction.Arn
